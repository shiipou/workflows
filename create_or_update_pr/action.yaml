name: Create or update PR

inputs:
  name:
    description: 'The PR name to update or create'
    required: true
    type: string
  script:
    description: 'Commands you want to execute before creation or update of the new PR'
    required: true
    type: string
  token:
    description: 'The GitHub Token to call GitHub API'
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Git authentification
      shell: bash
      run: |
        gh auth login --with-token < <(echo "${{ inputs.token }}")
        git config user.email "github-bot@nocturlab.fr"
        git config user.name "github bot"
    - name: Get PR infos
      id: get-pr-info
      shell: bash
      run: |
        PRs="$(gh pr list -L100)"
        id=''
        branch=''
        
        oldIFS=$IFS
        IFS="
        "; 
        for pr in $(echo ${PRs}); do
          _id=$(echo "${pr}" | cut -f1)
          _label=$(echo "${pr}" | cut -f2)
          branch=$(echo "${pr}" | cut -f3)
          
          if [ "${_label}" == "${{ inputs.name }}" ]; then
            echo "::set-output name=pr::${pr}"
            break
          fi
        done
        IFS=$oldIFS
    - name: Create new git branch
      shell: bash
      id: create-new-branch
      run: |
        if [ -z "${{ steps.get-pr-info.outputs.pr }}" ]; then
          branch="$(echo "deps-bot/${{ inputs.name }}" |  tr '[:upper:]' '[:lower:]')"
          branch=${branch// /-}
          git checkout -b "${branch}"
          echo "::set-output name=branch::${branch}"
        fi
    - name: Get branch name
      id: get-branch-name
      shell: bash
      run: |
        branch="${{ steps.create-new-branch.outputs.branch }}"
        if [ -n "${{ steps.get-pr-info.outputs.pr }}" ]; then
          branch="$(echo "${{ steps.get-pr-info.outputs.pr }}" | cut -f3)"
        fi
        echo "::set-output name=branch::${branch}"
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ steps.get-branch-name.outputs.branch }}
    - name: Run script
      shell: bash
      run: |
        set -xe
        ${{ inputs.script }}
    - name: Push new changes
      shell: bash
      run: | 
        if [ -n "${{ steps.get-pr-info.outputs.pr }}" ]; then
          git push
          info="$(gh pr view "$id" --json commits --jq ".commits[0].messageHeadline" | cat)"
          gh pr comment "$id" -b "${info}"
        else
          git push -u origin "${branch}"
          info="$(git log --no-decorate --pretty=oneline -n 1 | cut -d" " -f2-)"
          gh pr create --title "${{ inputs.name }}" --body "${info}"
        fi

        
